esphome:
  name: cc1101
  friendly_name: CC1101
  includes:
    - cc1101.h
  libraries:
    - SPI
    - "SmartRC-CC1101-Driver-Lib"

esp32:
  board: esp32-c3-devkitm-1

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true
  power_save_mode: HIGH

logger:
  level: VERBOSE

api:

ota:
  platform: esphome
  password: !secret ota_password

web_server:
  port: 80

mqtt:
  broker: !secret mqtt_broker
  username: !secret mqtt_username
  password: !secret mqtt_password

  on_message:
    - topic: cc1101/button/
      payload: "light_button"
      then:
        - button.press: light_button

    - topic: cc1101/button/
      payload: "fan_off_button"
      then:
        - button.press: fan_off_button

    - topic: cc1101/button/
      payload: "plus_button"
      then:
        - button.press: plus_button

    - topic: cc1101/button/
      payload: "minus_button"
      then:
        - button.press: minus_button

    - topic: cc1101/button/
      payload: "timer_button"
      then:
        - button.press: timer_button

sensor:
  - platform: custom
    lambda: |-
      auto my_sensor = new CC1101(
        4,  // SCK
        5,  // MISO
        6,  // MOSI
        7,  // CSN
        10, // GDO0
        200, // bandwidth_in_khz
        433.92, // freq_in_mhz
        id(transmitter) // id of remote_transmitter
      );
      App.register_component(my_sensor);
      return {my_sensor};
    sensors:
      id: transciver
      internal: true

remote_transmitter:
  - id: transmitter
    pin:
      number: 10 # This is GDO0
    carrier_duty_percent: 100%

button:
  - platform: template
    name: "Light Button"
    id: light_button
    on_press:
      - lambda: get_cc1101(transciver).beginTransmission();
      - remote_transmitter.transmit_raw:
          code: [300, -300, 600, -300, 600, -600, 300, -600, 300, -600, 300, -600, 300, -300, 600, -300, 600, -600, 300, -600, 300, -600, 300, -600, 300, -600, 300, -300, 600, -600, 300, -600, 300, -600, 300, -300, 600]
          repeat:
            times: 10
            wait_time: 15.15ms
      - lambda: get_cc1101(transciver).endTransmission();

  - platform: template
    name: "Fan Off Button"
    id: fan_off_button
    on_press:
      - lambda: get_cc1101(transciver).beginTransmission();
      - remote_transmitter.transmit_raw:
          code: [300, -300, 600, -300, 600, -600, 300, -600, 300, -600, 300, -600, 300, -300, 600, -300, 600, -600, 300, -600, 300, -600, 300, -600, 300, -600, 300, -300, 600, -600, 300, -600, 300, -300, 600, -600, 300]
          repeat:
            times: 10
            wait_time: 15.15ms
      - lambda: get_cc1101(transciver).endTransmission();

  - platform: template
    name: "Plus Button"
    id: plus_button
    on_press:
      - lambda: get_cc1101(transciver).beginTransmission();
      - remote_transmitter.transmit_raw:
          code: [300, -300, 600, -300, 600, -600, 300, -600, 300, -600, 300, -600, 300, -300, 600, -300, 600, -600, 300, -600, 300, -600, 300, -600, 300, -600, 300, -300, 600, -600, 300, -600, 300, -300, 600, -300, 600]
          repeat:
            times: 10
            wait_time: 15.15ms
      - lambda: get_cc1101(transciver).endTransmission();

  - platform: template
    name: "Minus Button"
    id: minus_button
    on_press:
      - lambda: get_cc1101(transciver).beginTransmission();
      - remote_transmitter.transmit_raw:
          code: [300, -300, 600, -300, 600, -600, 300, -600, 300, -600, 300, -600, 300, -300, 600, -300, 600, -600, 300, -600, 300, -600, 300, -600, 300, -600, 300, -300, 600, -600, 300, -300, 600, -600, 300, -300, 600]
          repeat:
            times: 10
            wait_time: 15.15ms
      - lambda: get_cc1101(transciver).endTransmission();

  - platform: template
    name: "Timer Button"
    id: timer_button
    on_press:
      - lambda: get_cc1101(transciver).beginTransmission();
      - remote_transmitter.transmit_raw:
          code: [300, -300, 600, -300, 600, -600, 300, -600, 300, -600, 300, -600, 300, -300, 600, -300, 600, -600, 300, -600, 300, -600, 300, -600, 300, -600, 300, -300, 600, -600, 300, -300, 600, -300, 600, -600, 300]
          repeat:
            times: 10
            wait_time: 15.15ms
      - lambda: get_cc1101(transciver).endTransmission();