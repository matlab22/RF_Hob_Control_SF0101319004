# https://github.com/dbuezas/esphome-cc1101
esphome:
  name: cc1101
  friendly_name: CC1101
  includes:
    - cc1101.h
  libraries:
    - SPI
    - "SmartRC-CC1101-Driver-Lib"

# esp8266:
#   board: d1_mini

#esp32:
#  board: esp32dev
esp32:
  board: esp32-c3-devkitm-1  # Adjust according to your board

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true
  power_save_mode: HIGH

logger:
  level: VERBOSE
api:
ota:
  platform: esphome
  password: !secret ota_password

web_server:
  port: 80

sensor:
  - platform: custom
    lambda: |-
      auto my_sensor = new CC1101(

        // esp8266 example
        // D5, // SCK
        // D6, // MISO
        // D7, // MOSI
        // D3, // CSN
        // D1, // GDO0

        // esp32 example
        // 18, // SCK
        // 19, // MISO
        // 23, // MOSI
        // 5, // CSN
        // 32, // GDO0

        // esp32 c3
        4, // SCK
        5, // MISO
        6, // MOSI
        7, // CSN
        0, // GDO0

        200, // bandwidth_in_khz
        433.92, // freq_in_mhz
        id(transmitter) // id of remote_transmitter
      );
      App.register_component(my_sensor);
      return {my_sensor};
    sensors:
      id: transciver
      internal: true

remote_transmitter:
  - id: transmitter
    pin:
      number: 0 # This is GDO0
      allow_other_uses: true
    carrier_duty_percent: 100%

remote_receiver:
  - id: receiver
    pin:
      number: 0 # This is GDO0
      allow_other_uses: true
      # on the esp8266 use any of D1,D2,D5,D6,D7,Rx
      # Don't use D3,D4,D8,TX, boot often fails.
      # Can't be D0 or GPIO17 b/c no interrupts
    dump:
      - raw
# binary_sensor:
#   - platform: remote_receiver
#     name: Garage
#     raw:
#       # prettier-ignore
#       code: [990,-330,330,-990,990,-330,330,-990,330,-990,330,-990,330,-990,330,-990,330,-990,990,-330,330,-990,990,-330,330,-990,330,-990,330,-990,330,-990,330,-990,330,-990,990,-330,990,-330,330,-990,330,-990,990,-330,330,-990,330]

button:
  - platform: template
    name: Light
    on_press:
      - lambda: get_cc1101(transciver).beginTransmission();
      - remote_transmitter.transmit_raw:
          # prettier-ignore
          code: [300, -300, 600, -300, 600, -600, 300, -600, 300, -600, 300, -600, 300, -300, 600, -300, 600, -600, 300, -600, 300, -600, 300, -600, 300, -600, 300, -300, 600, -600, 300, -600, 300, -600, 300, -300, 600]
          repeat:
            times: 10
            wait_time: 15.15ms
      - lambda: get_cc1101(transciver).endTransmission();

  - platform: template
    name: Fan
    on_press:
      - lambda: get_cc1101(transciver).beginTransmission();
      - remote_transmitter.transmit_raw:
          # prettier-ignore
          code: [300, -300, 600, -300, 600, -600, 300, -600, 300, -600, 300, -600, 300, -300, 600, -300, 600, -600, 300, -600, 300, -600, 300, -600, 300, -600, 300, -300, 600, -600, 300, -600, 300, -300, 600, -600, 300]
          repeat:
            times: 10
            wait_time: 15.15ms
      - lambda: get_cc1101(transciver).endTransmission();

  - platform: template
    name: Plus
    on_press:
      - lambda: get_cc1101(transciver).beginTransmission();
      - remote_transmitter.transmit_raw:
          # prettier-ignore
          code: [300, -300, 600, -300, 600, -600, 300, -600, 300, -600, 300, -600, 300, -300, 600, -300, 600, -600, 300, -600, 300, -600, 300, -600, 300, -600, 300, -300, 600, -600, 300, -600, 300, -300, 600, -300, 600]
          repeat:
            times: 10
            wait_time: 15.15ms
      - lambda: get_cc1101(transciver).endTransmission();